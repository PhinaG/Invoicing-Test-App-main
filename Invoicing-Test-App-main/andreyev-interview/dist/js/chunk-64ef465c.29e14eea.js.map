{"version":3,"sources":["webpack:///./src/views/Clients.vue?97df","webpack:///./src/views/Clients.vue","webpack:///./src/views/Clients.vue?36ad","webpack:///./src/views/Clients.vue?7c1b","webpack:///./node_modules/core-js/modules/es.function.name.js"],"names":["class","for","type","name","state","placeholder","createClient","clients","client","key","id","updateClient","deleteClient","setup","fetchClients","message","fetch","method","headers","then","response","json","clientList","alert","body","JSON","stringify","ok","render","__scopeId","DESCRIPTORS","FUNCTION_NAME_EXISTS","EXISTS","uncurryThis","defineProperty","f","FunctionPrototype","Function","prototype","functionToString","toString","nameRE","regExpExec","exec","NAME","configurable","get","this","error"],"mappings":"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","file":"js/chunk-64ef465c.29e14eea.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Clients.vue?vue&type=style&index=0&id=62f50f50&scoped=true&lang=css\"","<template>\r\n    <br>\r\n    <div class=\"home\">\r\n      <form @submit.prevent>\r\n        <label for=\"clients\">Create a new client</label>\r\n        <div class=\"container\">\r\n          <div class=\"spacer\"><input type=\"text\" name=\"clients\" v-model=\"state.name\" placeholder=\"Name\" /></div>\r\n          <div class=\"spacer\"><button class=\"create-button\" @click=\"createClient\">Create a new Client</button></div>\r\n        </div>\r\n      </form>\r\n  \r\n      <hr />\r\n  \r\n       <table>\r\n        <thead>\r\n          <th>ID</th>\r\n          <th>Name</th>\r\n          <th>Actions</th>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"client in state.clients\" :key=\"client.id\">\r\n            <td>{{client.id}}</td>\r\n            <td> <input type=\"text\" name=\"name\" v-model=\"client.name\" placeholder=\"Name\"  @change=\"updateClient(client)\"/></td>\r\n            <td>\r\n                <button :id=\"client.id\" @click=\"deleteClient(client.id, client.name)\" class=\"error-button\" >Delete</button>\r\n            </td>       \r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <style scoped>\r\n  .container {\r\n    display: flex; /* Align entries vertically */\r\n    align-items: center;    /* Center horizontally */\r\n  }\r\n  \r\n  .entry {\r\n    background-color: #f0f0f0;\r\n    border: 1px solid #ccc;\r\n    padding: 16px;\r\n    margin: 8px;\r\n    width: 80%;\r\n    height:50%;\r\n    text-align: center;\r\n  }\r\n  \r\n  .spacer {\r\n    flex: 1;/* Adjust spacer height as needed */\r\n  }\r\n  \r\n  .create-button{\r\n    color:white; \r\n    background-color: rgb(73, 73, 194);\r\n  }\r\n  \r\n  .success-button{\r\n    color:white; \r\n    background-color:rgb(67, 179, 67);\r\n  }\r\n  \r\n  .error-button{\r\n    color:white; \r\n    background-color:rgb(211, 86, 86);\r\n  }\r\n  .create-button:hover {\r\n  background-color: #6f7275;\r\n}\r\n\r\n.success-button:hover {\r\n  background-color: #6f7275;\r\n}\r\n\r\n.error-button:hover {\r\n  background-color: #6f7275;\r\n}\r\n  </style>\r\n  \r\n  <script lang=\"ts\">\r\n  import { defineComponent, onMounted, reactive } from 'vue';\r\n  // @ is an alias to /src\r\n  \r\n  export default defineComponent({\r\n    name: 'Clients',\r\n    setup() {\r\n      const state = reactive({\r\n        clients: [],\r\n        name: \"\"\r\n      })\r\n  \r\n      function fetchClients(message: string = '') {\r\n        fetch(\"http://localhost:5000/clients\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n        }).then((response) => {\r\n          response.json().then(clients => (state.clients = clients.clientList))\r\n          if(message != ''){\r\n            alert(message);\r\n          }\r\n        })\r\n      }\r\n  \r\n      function createClient() {\r\n        fetch(\"http://localhost:5000/clients\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            name: state.name\r\n          })\r\n        }).then((response) => {\r\n        if(response.ok){          \r\n          fetchClients(`A new client: ${state.name} has been created`);\r\n        }\r\n        \r\n        })\r\n    }\r\n\r\n      function updateClient(client:any){\r\n        let id = client.id;\r\n        fetch(`http://localhost:5000/clients/${id}`, {\r\n          method: \"PATCH\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            name:client.name\r\n          })\r\n        }).then((response) => {\r\n        if(response.ok){          \r\n          fetchClients(`A client: ${client.name} has been updated`);\r\n        }\r\n       \r\n        })\r\n      }\r\n  \r\n      function deleteClient(id:Number, name:string){\r\n        fetch(`http://localhost:5000/clients/${id}`, {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        }).then((response) => {\r\n        if(response.ok){          \r\n          fetchClients(`A client: ${name} has been removed`);\r\n        }        \r\n      })\r\n        \r\n      }    \r\n      onMounted(fetchClients)\r\n  \r\n      return {state, createClient,updateClient, deleteClient}\r\n    }\r\n});\r\n  \r\n  </script>\r\n  ","\r\n  import { defineComponent, onMounted, reactive } from 'vue';\r\n  // @ is an alias to /src\r\n  \r\n  export default defineComponent({\r\n    name: 'Clients',\r\n    setup() {\r\n      const state = reactive({\r\n        clients: [],\r\n        name: \"\"\r\n      })\r\n  \r\n      function fetchClients(message: string = '') {\r\n        fetch(\"http://localhost:5000/clients\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n        }).then((response) => {\r\n          response.json().then(clients => (state.clients = clients.clientList))\r\n          if(message != ''){\r\n            alert(message);\r\n          }\r\n        })\r\n      }\r\n  \r\n      function createClient() {\r\n        fetch(\"http://localhost:5000/clients\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            name: state.name\r\n          })\r\n        }).then((response) => {\r\n        if(response.ok){          \r\n          fetchClients(`A new client: ${state.name} has been created`);\r\n        }\r\n        \r\n        })\r\n    }\r\n\r\n      function updateClient(client:any){\r\n        let id = client.id;\r\n        fetch(`http://localhost:5000/clients/${id}`, {\r\n          method: \"PATCH\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            name:client.name\r\n          })\r\n        }).then((response) => {\r\n        if(response.ok){          \r\n          fetchClients(`A client: ${client.name} has been updated`);\r\n        }\r\n       \r\n        })\r\n      }\r\n  \r\n      function deleteClient(id:Number, name:string){\r\n        fetch(`http://localhost:5000/clients/${id}`, {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        }).then((response) => {\r\n        if(response.ok){          \r\n          fetchClients(`A client: ${name} has been removed`);\r\n        }        \r\n      })\r\n        \r\n      }    \r\n      onMounted(fetchClients)\r\n  \r\n      return {state, createClient,updateClient, deleteClient}\r\n    }\r\n});\r\n  \r\n  ","import { render } from \"./Clients.vue?vue&type=template&id=62f50f50&scoped=true\"\nimport script from \"./Clients.vue?vue&type=script&lang=ts\"\nexport * from \"./Clients.vue?vue&type=script&lang=ts\"\n\nimport \"./Clients.vue?vue&type=style&index=0&id=62f50f50&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-62f50f50\"\n\nexport default script","var DESCRIPTORS = require('../internals/descriptors');\nvar FUNCTION_NAME_EXISTS = require('../internals/function-name').EXISTS;\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar functionToString = uncurryThis(FunctionPrototype.toString);\nvar nameRE = /function\\b(?:\\s|\\/\\*[\\S\\s]*?\\*\\/|\\/\\/[^\\n\\r]*[\\n\\r]+)*([^\\s(/]*)/;\nvar regExpExec = uncurryThis(nameRE.exec);\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return regExpExec(nameRE, functionToString(this))[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n"],"sourceRoot":""}